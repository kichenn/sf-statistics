<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:spring-beans-4.3.xsd
                           http://www.springframework.org/schema/context classpath:spring-context-4.3.xsd">
    <!-- 加载mysql的属性配置文件 -->
    <context:property-placeholder location="classpath:mysql.properties"/>

    <!--<bean id="emotibotDataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">-->
        <!--<property name="driverClassName">-->
            <!--<value>com.mysql.cj.jdbc.Driver</value>-->
        <!--</property>-->
        <!--<property name="url" value="${mysql.emotibot.url}"/>-->
        <!--<property name="username" value="${mysql.emotibot.username}"/>-->
        <!--<property name="password" value="${mysql.emotibot.password}"/>-->
        <!--&lt;!&ndash; 连接初始值，连接池启动时创建的连接数量的初始值  默认值是0 &ndash;&gt;-->
        <!--<property name="initialSize" value="${mysql.emotibot.initialSize}"/>-->
        <!--&lt;!&ndash; 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请  默认值是0 &ndash;&gt;-->
        <!--<property name="minIdle" value="${mysql.emotibot.minIdle}"/>-->
        <!--&lt;!&ndash; 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 ，0时无限制  默认值是8 &ndash;&gt;-->
        <!--<property name="maxIdle" value="${mysql.emotibot.maxIdle}"/>-->
        <!--&lt;!&ndash; 连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制   默认值是8 &ndash;&gt;-->
        <!--<property name="maxTotal" value="${mysql.emotibot.maxTotal}"/>-->
        <!--<property name="validationQuery" value="SELECT 1"></property>-->
        <!--<property name="testWhileIdle" value="true"></property>-->
        <!--<property name="testOnBorrow" value="true"></property>-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="3600000"></property>-->
        <!--<property name="numTestsPerEvictionRun" value="50"></property>-->
        <!--<property name="minEvictableIdleTimeMillis" value="120000"></property>-->
        <!--<property name="removeAbandonedTimeout" value="6000000"/>-->
    <!--</bean>-->


    <bean id="emotibotDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass">
            <value>com.mysql.cj.jdbc.Driver</value>
        </property>
        <property name="jdbcUrl" value="${mysql.emotibot.url}"/>
        <property name="user" value="${mysql.emotibot.username}"/>
        <property name="password" value="${mysql.emotibot.password}"/>
        <!-- 连接初始值，连接池启动时创建的连接数量的初始值  默认值是0 -->
        <property name="initialPoolSize" value="${mysql.emotibot.initialSize}"/>
        <!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请  默认值是0 -->
        <property name="minPoolSize" value="${mysql.emotibot.minIdle}"/>
        <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 ，0时无限制  默认值是8 -->
        <property name="maxPoolSize" value="${mysql.emotibot.maxIdle}"/>
        <!-- 连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制   默认值是8 -->

        <property name="maxIdleTime" value="1600"/>
        <property name="automaticTestTable" value="C3P0TestTable"/>
        <property name="preferredTestQuery" value="SELECT 1"/>
        <property name="idleConnectionTestPeriod" value="500"/>
        <property name="testConnectionOnCheckout" value="false"/>
        <property name="testConnectionOnCheckin" value="true"/>
    </bean>



    <bean id="backendLogJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="emotibotDataSource"></property>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据库连接池 -->
        <property name="dataSource" ref="emotibotDataSource"/>
        <!-- 加载mybatis的全局配置文件 -->
        <property name="configLocation" value="classpath:myBatis/SqlMapConfig.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="dao.*"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="emotibotDataSource"></property>
    </bean>

    <bean id="reportDao" class="dao.ReportImp">
        <property name="jdbcTemplate" ref="backendLogJdbcTemplate"></property>
    </bean>


</beans>
